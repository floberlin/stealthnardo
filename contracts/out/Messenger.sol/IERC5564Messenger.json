{
  "abi": [
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "uint256",
          "name": "schemeId",
          "type": "uint256"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "stealthAddress",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "bytes",
          "name": "ephemeralPubKey",
          "type": "bytes"
        },
        {
          "indexed": false,
          "internalType": "bytes",
          "name": "metadata",
          "type": "bytes"
        }
      ],
      "name": "Announcement",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "account",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "totalStaked",
          "type": "uint256"
        }
      ],
      "name": "StakeDeposit",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "account",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "address",
          "name": "withdrawAddress",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        }
      ],
      "name": "StakeWithdrawal",
      "type": "event"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "staker",
          "type": "address"
        }
      ],
      "name": "addStake",
      "outputs": [],
      "stateMutability": "payable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "schemeId",
          "type": "uint256"
        },
        {
          "internalType": "address",
          "name": "stealthAddress",
          "type": "address"
        },
        {
          "internalType": "bytes",
          "name": "ephemeralPubKey",
          "type": "bytes"
        },
        {
          "internalType": "bytes",
          "name": "metadata",
          "type": "bytes"
        }
      ],
      "name": "announce",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "account",
          "type": "address"
        }
      ],
      "name": "balanceOf",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "name": "stakes",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address payable",
          "name": "withdrawAddress",
          "type": "address"
        }
      ],
      "name": "withdrawStake",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "stateMutability": "payable",
      "type": "receive"
    }
  ],
  "bytecode": {
    "object": "0x608060405234801561001057600080fd5b506105a8806100206000396000f3fe60806040526004361061004e5760003560e01c8063107679041461006357806316934fc4146100765780634d1f9583146100b557806370a08231146100d5578063c23a5cea1461010b57600080fd5b3661005e5761005c3361012b565b005b600080fd5b61005c610071366004610390565b61012b565b34801561008257600080fd5b506100a3610091366004610390565b60006020819052908152604090205481565b60405190815260200160405180910390f35b3480156100c157600080fd5b5061005c6100d0366004610457565b6101df565b3480156100e157600080fd5b506100a36100f0366004610390565b6001600160a01b031660009081526020819052604090205490565b34801561011757600080fd5b5061005c610126366004610390565b610229565b600034116101715760405162461bcd60e51b815260206004820152600e60248201526d1a5b9d985b1a5908185b5bdd5b9d60921b60448201526064015b60405180910390fd5b6001600160a01b038116600090815260208190526040812080543492906101999084906104d7565b90915550506040513481526001600160a01b038216907f1da2c4060997c108162f55c30ad2268924b069210f8c686ba302e1acc6909ccc9060200160405180910390a250565b826001600160a01b0316847fc161b5d8d13c524d769545162d90b3e4341d89659fa54b3126825f4cabc26582848460405161021b929190610544565b60405180910390a350505050565b336000908152602081905260409020548061027d5760405162461bcd60e51b81526020600482015260146024820152734e6f207374616b6520746f20776974686472617760601b6044820152606401610168565b336000818152602081815260408083209290925581516001600160a01b03861681529081018490527fbf1dba36cbf97f27e9890b9ca95f31d9a0547294828d0f9b25299c090508c7ef910160405180910390a26000826001600160a01b03168260405160006040518083038185875af1925050503d806000811461031d576040519150601f19603f3d011682016040523d82523d6000602084013e610322565b606091505b50509050806103735760405162461bcd60e51b815260206004820152601860248201527f6661696c656420746f207769746864726177207374616b6500000000000000006044820152606401610168565b505050565b6001600160a01b038116811461038d57600080fd5b50565b6000602082840312156103a257600080fd5b81356103ad81610378565b9392505050565b634e487b7160e01b600052604160045260246000fd5b600082601f8301126103db57600080fd5b813567ffffffffffffffff808211156103f6576103f66103b4565b604051601f8301601f19908116603f0116810190828211818310171561041e5761041e6103b4565b8160405283815286602085880101111561043757600080fd5b836020870160208301376000602085830101528094505050505092915050565b6000806000806080858703121561046d57600080fd5b84359350602085013561047f81610378565b9250604085013567ffffffffffffffff8082111561049c57600080fd5b6104a8888389016103ca565b935060608701359150808211156104be57600080fd5b506104cb878288016103ca565b91505092959194509250565b808201808211156104f857634e487b7160e01b600052601160045260246000fd5b92915050565b6000815180845260005b8181101561052457602081850181015186830182015201610508565b506000602082860101526020601f19601f83011685010191505092915050565b60408152600061055760408301856104fe565b828103602084015261056981856104fe565b9594505050505056fea26469706673582212201ba46f014f45b4fd123a5ec6ce81ce6b607d4b4f5de4795eb2a901d14bd173ef64736f6c63430008120033",
    "sourceMap": "64:3291:20:-:0;;;;;;;;;;;;;;;;;;;",
    "linkReferences": {}
  },
  "deployedBytecode": {
    "object": "0x60806040526004361061004e5760003560e01c8063107679041461006357806316934fc4146100765780634d1f9583146100b557806370a08231146100d5578063c23a5cea1461010b57600080fd5b3661005e5761005c3361012b565b005b600080fd5b61005c610071366004610390565b61012b565b34801561008257600080fd5b506100a3610091366004610390565b60006020819052908152604090205481565b60405190815260200160405180910390f35b3480156100c157600080fd5b5061005c6100d0366004610457565b6101df565b3480156100e157600080fd5b506100a36100f0366004610390565b6001600160a01b031660009081526020819052604090205490565b34801561011757600080fd5b5061005c610126366004610390565b610229565b600034116101715760405162461bcd60e51b815260206004820152600e60248201526d1a5b9d985b1a5908185b5bdd5b9d60921b60448201526064015b60405180910390fd5b6001600160a01b038116600090815260208190526040812080543492906101999084906104d7565b90915550506040513481526001600160a01b038216907f1da2c4060997c108162f55c30ad2268924b069210f8c686ba302e1acc6909ccc9060200160405180910390a250565b826001600160a01b0316847fc161b5d8d13c524d769545162d90b3e4341d89659fa54b3126825f4cabc26582848460405161021b929190610544565b60405180910390a350505050565b336000908152602081905260409020548061027d5760405162461bcd60e51b81526020600482015260146024820152734e6f207374616b6520746f20776974686472617760601b6044820152606401610168565b336000818152602081815260408083209290925581516001600160a01b03861681529081018490527fbf1dba36cbf97f27e9890b9ca95f31d9a0547294828d0f9b25299c090508c7ef910160405180910390a26000826001600160a01b03168260405160006040518083038185875af1925050503d806000811461031d576040519150601f19603f3d011682016040523d82523d6000602084013e610322565b606091505b50509050806103735760405162461bcd60e51b815260206004820152601860248201527f6661696c656420746f207769746864726177207374616b6500000000000000006044820152606401610168565b505050565b6001600160a01b038116811461038d57600080fd5b50565b6000602082840312156103a257600080fd5b81356103ad81610378565b9392505050565b634e487b7160e01b600052604160045260246000fd5b600082601f8301126103db57600080fd5b813567ffffffffffffffff808211156103f6576103f66103b4565b604051601f8301601f19908116603f0116810190828211818310171561041e5761041e6103b4565b8160405283815286602085880101111561043757600080fd5b836020870160208301376000602085830101528094505050505092915050565b6000806000806080858703121561046d57600080fd5b84359350602085013561047f81610378565b9250604085013567ffffffffffffffff8082111561049c57600080fd5b6104a8888389016103ca565b935060608701359150808211156104be57600080fd5b506104cb878288016103ca565b91505092959194509250565b808201808211156104f857634e487b7160e01b600052601160045260246000fd5b92915050565b6000815180845260005b8181101561052457602081850181015186830182015201610508565b506000602082860101526020601f19601f83011685010191505092915050565b60408152600061055760408301856104fe565b828103602084015261056981856104fe565b9594505050505056fea26469706673582212201ba46f014f45b4fd123a5ec6ce81ce6b607d4b4f5de4795eb2a901d14bd173ef64736f6c63430008120033",
    "sourceMap": "64:3291:20:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;551:20;560:10;551:8;:20::i;:::-;64:3291;;;;;679:175;;;;;;:::i;:::-;;:::i;331:41::-;;;;;;;;;;-1:-1:-1;331:41:20;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;548:25:25;;;536:2;521:18;331:41:20;;;;;;;3150:203;;;;;;;;;;-1:-1:-1;3150:203:20;;;;;:::i;:::-;;:::i;415:99::-;;;;;;;;;;-1:-1:-1;415:99:20;;;;;:::i;:::-;-1:-1:-1;;;;;494:15:20;472:7;494:15;;;;;;;;;;;;415:99;960:361;;;;;;;;;;-1:-1:-1;960:361:20;;;;;:::i;:::-;;:::i;679:175::-;754:1;742:9;:13;734:40;;;;-1:-1:-1;;;734:40:20;;2649:2:25;734:40:20;;;2631:21:25;2688:2;2668:18;;;2661:30;-1:-1:-1;;;2707:18:25;;;2700:44;2761:18;;734:40:20;;;;;;;;;-1:-1:-1;;;;;780:14:20;;:6;:14;;;;;;;;;;:27;;798:9;;780:6;:27;;798:9;;780:27;:::i;:::-;;;;-1:-1:-1;;818:31:20;;839:9;548:25:25;;-1:-1:-1;;;;;818:31:20;;;;;536:2:25;521:18;818:31:20;;;;;;;679:175;:::o;3150:203::-;3306:14;-1:-1:-1;;;;;3283:65:20;3296:8;3283:65;3322:15;3339:8;3283:65;;;;;;;:::i;:::-;;;;;;;;3150:203;;;;:::o;960:361::-;1054:10;1031:13;1047:18;;;;;;;;;;;1079:9;1071:42;;;;-1:-1:-1;;;1071:42:20;;4028:2:25;1071:42:20;;;4010:21:25;4067:2;4047:18;;;4040:30;-1:-1:-1;;;4086:18:25;;;4079:50;4146:18;;1071:42:20;3826:344:25;1071:42:20;1126:10;1140:1;1119:18;;;;;;;;;;;:22;;;;1152:51;;-1:-1:-1;;;;;4375:32:25;;4357:51;;4424:18;;;4417:34;;;1152:51:20;;4330:18:25;1152:51:20;;;;;;;1210:12;1228:15;-1:-1:-1;;;;;1228:20:20;1256:5;1228:38;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1209:57;;;1280:7;1272:44;;;;-1:-1:-1;;;1272:44:20;;4874:2:25;1272:44:20;;;4856:21:25;4913:2;4893:18;;;4886:30;4952:26;4932:18;;;4925:54;4996:18;;1272:44:20;4672:348:25;1272:44:20;1025:296;;960:361;:::o;14:131:25:-;-1:-1:-1;;;;;89:31:25;;79:42;;69:70;;135:1;132;125:12;69:70;14:131;:::o;150:247::-;209:6;262:2;250:9;241:7;237:23;233:32;230:52;;;278:1;275;268:12;230:52;317:9;304:23;336:31;361:5;336:31;:::i;:::-;386:5;150:247;-1:-1:-1;;;150:247:25:o;584:127::-;645:10;640:3;636:20;633:1;626:31;676:4;673:1;666:15;700:4;697:1;690:15;716:718;758:5;811:3;804:4;796:6;792:17;788:27;778:55;;829:1;826;819:12;778:55;865:6;852:20;891:18;928:2;924;921:10;918:36;;;934:18;;:::i;:::-;1009:2;1003:9;977:2;1063:13;;-1:-1:-1;;1059:22:25;;;1083:2;1055:31;1051:40;1039:53;;;1107:18;;;1127:22;;;1104:46;1101:72;;;1153:18;;:::i;:::-;1193:10;1189:2;1182:22;1228:2;1220:6;1213:18;1274:3;1267:4;1262:2;1254:6;1250:15;1246:26;1243:35;1240:55;;;1291:1;1288;1281:12;1240:55;1355:2;1348:4;1340:6;1336:17;1329:4;1321:6;1317:17;1304:54;1402:1;1395:4;1390:2;1382:6;1378:15;1374:26;1367:37;1422:6;1413:15;;;;;;716:718;;;;:::o;1439:743::-;1543:6;1551;1559;1567;1620:3;1608:9;1599:7;1595:23;1591:33;1588:53;;;1637:1;1634;1627:12;1588:53;1673:9;1660:23;1650:33;;1733:2;1722:9;1718:18;1705:32;1746:31;1771:5;1746:31;:::i;:::-;1796:5;-1:-1:-1;1852:2:25;1837:18;;1824:32;1875:18;1905:14;;;1902:34;;;1932:1;1929;1922:12;1902:34;1955:49;1996:7;1987:6;1976:9;1972:22;1955:49;:::i;:::-;1945:59;;2057:2;2046:9;2042:18;2029:32;2013:48;;2086:2;2076:8;2073:16;2070:36;;;2102:1;2099;2092:12;2070:36;;2125:51;2168:7;2157:8;2146:9;2142:24;2125:51;:::i;:::-;2115:61;;;1439:743;;;;;;;:::o;2790:222::-;2855:9;;;2876:10;;;2873:133;;;2928:10;2923:3;2919:20;2916:1;2909:31;2963:4;2960:1;2953:15;2991:4;2988:1;2981:15;2873:133;2790:222;;;;:::o;3017:422::-;3058:3;3096:5;3090:12;3123:6;3118:3;3111:19;3148:1;3158:162;3172:6;3169:1;3166:13;3158:162;;;3234:4;3290:13;;;3286:22;;3280:29;3262:11;;;3258:20;;3251:59;3187:12;3158:162;;;3162:3;3365:1;3358:4;3349:6;3344:3;3340:16;3336:27;3329:38;3428:4;3421:2;3417:7;3412:2;3404:6;3400:15;3396:29;3391:3;3387:39;3383:50;3376:57;;;3017:422;;;;:::o;3444:377::-;3637:2;3626:9;3619:21;3600:4;3663:44;3703:2;3692:9;3688:18;3680:6;3663:44;:::i;:::-;3755:9;3747:6;3743:22;3738:2;3727:9;3723:18;3716:50;3783:32;3808:6;3800;3783:32;:::i;:::-;3775:40;3444:377;-1:-1:-1;;;;;3444:377:25:o",
    "linkReferences": {}
  },
  "methodIdentifiers": {
    "addStake(address)": "10767904",
    "announce(uint256,address,bytes,bytes)": "4d1f9583",
    "balanceOf(address)": "70a08231",
    "stakes(address)": "16934fc4",
    "withdrawStake(address)": "c23a5cea"
  },
  "rawMetadata": "{\"compiler\":{\"version\":\"0.8.18+commit.87f61d96\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"schemeId\",\"type\":\"uint256\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"stealthAddress\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"bytes\",\"name\":\"ephemeralPubKey\",\"type\":\"bytes\"},{\"indexed\":false,\"internalType\":\"bytes\",\"name\":\"metadata\",\"type\":\"bytes\"}],\"name\":\"Announcement\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"totalStaked\",\"type\":\"uint256\"}],\"name\":\"StakeDeposit\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"withdrawAddress\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"StakeWithdrawal\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"staker\",\"type\":\"address\"}],\"name\":\"addStake\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"schemeId\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"stealthAddress\",\"type\":\"address\"},{\"internalType\":\"bytes\",\"name\":\"ephemeralPubKey\",\"type\":\"bytes\"},{\"internalType\":\"bytes\",\"name\":\"metadata\",\"type\":\"bytes\"}],\"name\":\"announce\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"stakes\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address payable\",\"name\":\"withdrawAddress\",\"type\":\"address\"}],\"name\":\"withdrawStake\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"stateMutability\":\"payable\",\"type\":\"receive\"}],\"devdoc\":{\"events\":{\"Announcement(uint256,address,bytes,bytes)\":{\"details\":\"Emitted when sending something to a stealth address.See the `announce` method for documentation on the parameters.\"}},\"kind\":\"dev\",\"methods\":{\"addStake(address)\":{\"params\":{\"staker\":\"the address of the staker.\"}},\"announce(uint256,address,bytes,bytes)\":{\"details\":\"Called by integrators to emit an `Announcement` event.\",\"params\":{\"ephemeralPubKey\":\"Ephemeral public key used by the sender.\",\"metadata\":\"An arbitrary field MUST include the view tag in the first byte. Besides the view tag, the metadata can be used by the senders however they like, but the below guidelines are recommended: The first byte of the metadata MUST be the view tag. - When sending ERC-20 tokens, the metadata SHOULD be structured as follows:   - Byte 1 MUST be the view tag, as specified above.   - Bytes 2-5 are the method Id, which the hash of the canonical representation of the function to call.   - Bytes 6-25 are the token contract address.   - Bytes 26-57 are the amount of tokens being sent. - When approving a stealth address to spend ERC-20 tokens, the metadata SHOULD be structured as follows:   - Byte 1 MUST be the view tag, as specified above.   - Bytes 2-5 are 0xe1f21c67, which the signature for the ERC-20 approve method.   - Bytes 6-25 are the token address.   - Bytes 26-57 are the approval amount. - When sending ERC-721 tokens, the metadata SHOULD be structured as follows:   - Byte 1 MUST be the view tag, as specified above.   - Bytes 2-5 are the method Id.   - Bytes 6-25 are the token address.   - Bytes 26-57 are the token ID of the token being sent.\",\"schemeId\":\"The applied stealth address scheme (f.e. secp25k1).\",\"stealthAddress\":\"The computed stealth address for the recipient.\"}},\"withdrawStake(address)\":{\"params\":{\"withdrawAddress\":\"the address to send withdrawn value.\"}}},\"version\":1},\"userdoc\":{\"events\":{\"StakeDeposit(address,uint256)\":{\"notice\":\"Emitted when stake is deposited\"}},\"kind\":\"user\",\"methods\":{\"addStake(address)\":{\"notice\":\"add to the account's stake - amount\"},\"balanceOf(address)\":{\"notice\":\"return the stake of the account\"},\"stakes(address)\":{\"notice\":\"maps paymaster to their stakes\"},\"withdrawStake(address)\":{\"notice\":\"withdraw the stake.\"}},\"version\":1}},\"settings\":{\"compilationTarget\":{\"src/Messenger.sol\":\"IERC5564Messenger\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[\":ds-test/=lib/forge-std/lib/ds-test/src/\",\":forge-std/=lib/forge-std/src/\"]},\"sources\":{\"src/Messenger.sol\":{\"keccak256\":\"0xca7257e9c7084e9384015c995cc110c693599856df9f067f3a0d2c3a7ba49058\",\"license\":\"UNLICENSED\",\"urls\":[\"bzz-raw://18dbaabafbd4dd298207e5c803fb1bdd3a4ed0e89dcbb4ca92eed9f571a3c4b1\",\"dweb:/ipfs/QmSBiDN7jfcaVcA6YiELBsodkN31P9YWBn35eQnc2QBjha\"]}},\"version\":1}",
  "metadata": {
    "compiler": {
      "version": "0.8.18+commit.87f61d96"
    },
    "language": "Solidity",
    "output": {
      "abi": [
        {
          "inputs": [
            {
              "internalType": "uint256",
              "name": "schemeId",
              "type": "uint256",
              "indexed": true
            },
            {
              "internalType": "address",
              "name": "stealthAddress",
              "type": "address",
              "indexed": true
            },
            {
              "internalType": "bytes",
              "name": "ephemeralPubKey",
              "type": "bytes",
              "indexed": false
            },
            {
              "internalType": "bytes",
              "name": "metadata",
              "type": "bytes",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "Announcement",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "account",
              "type": "address",
              "indexed": true
            },
            {
              "internalType": "uint256",
              "name": "totalStaked",
              "type": "uint256",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "StakeDeposit",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "account",
              "type": "address",
              "indexed": true
            },
            {
              "internalType": "address",
              "name": "withdrawAddress",
              "type": "address",
              "indexed": false
            },
            {
              "internalType": "uint256",
              "name": "amount",
              "type": "uint256",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "StakeWithdrawal",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "staker",
              "type": "address"
            }
          ],
          "stateMutability": "payable",
          "type": "function",
          "name": "addStake"
        },
        {
          "inputs": [
            {
              "internalType": "uint256",
              "name": "schemeId",
              "type": "uint256"
            },
            {
              "internalType": "address",
              "name": "stealthAddress",
              "type": "address"
            },
            {
              "internalType": "bytes",
              "name": "ephemeralPubKey",
              "type": "bytes"
            },
            {
              "internalType": "bytes",
              "name": "metadata",
              "type": "bytes"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "announce"
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "account",
              "type": "address"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "balanceOf",
          "outputs": [
            {
              "internalType": "uint256",
              "name": "",
              "type": "uint256"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "",
              "type": "address"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "stakes",
          "outputs": [
            {
              "internalType": "uint256",
              "name": "",
              "type": "uint256"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "address payable",
              "name": "withdrawAddress",
              "type": "address"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "withdrawStake"
        },
        {
          "inputs": [],
          "stateMutability": "payable",
          "type": "receive"
        }
      ],
      "devdoc": {
        "kind": "dev",
        "methods": {
          "addStake(address)": {
            "params": {
              "staker": "the address of the staker."
            }
          },
          "announce(uint256,address,bytes,bytes)": {
            "details": "Called by integrators to emit an `Announcement` event.",
            "params": {
              "ephemeralPubKey": "Ephemeral public key used by the sender.",
              "metadata": "An arbitrary field MUST include the view tag in the first byte. Besides the view tag, the metadata can be used by the senders however they like, but the below guidelines are recommended: The first byte of the metadata MUST be the view tag. - When sending ERC-20 tokens, the metadata SHOULD be structured as follows:   - Byte 1 MUST be the view tag, as specified above.   - Bytes 2-5 are the method Id, which the hash of the canonical representation of the function to call.   - Bytes 6-25 are the token contract address.   - Bytes 26-57 are the amount of tokens being sent. - When approving a stealth address to spend ERC-20 tokens, the metadata SHOULD be structured as follows:   - Byte 1 MUST be the view tag, as specified above.   - Bytes 2-5 are 0xe1f21c67, which the signature for the ERC-20 approve method.   - Bytes 6-25 are the token address.   - Bytes 26-57 are the approval amount. - When sending ERC-721 tokens, the metadata SHOULD be structured as follows:   - Byte 1 MUST be the view tag, as specified above.   - Bytes 2-5 are the method Id.   - Bytes 6-25 are the token address.   - Bytes 26-57 are the token ID of the token being sent.",
              "schemeId": "The applied stealth address scheme (f.e. secp25k1).",
              "stealthAddress": "The computed stealth address for the recipient."
            }
          },
          "withdrawStake(address)": {
            "params": {
              "withdrawAddress": "the address to send withdrawn value."
            }
          }
        },
        "version": 1
      },
      "userdoc": {
        "kind": "user",
        "methods": {
          "addStake(address)": {
            "notice": "add to the account's stake - amount"
          },
          "balanceOf(address)": {
            "notice": "return the stake of the account"
          },
          "stakes(address)": {
            "notice": "maps paymaster to their stakes"
          },
          "withdrawStake(address)": {
            "notice": "withdraw the stake."
          }
        },
        "version": 1
      }
    },
    "settings": {
      "remappings": [
        ":ds-test/=lib/forge-std/lib/ds-test/src/",
        ":forge-std/=lib/forge-std/src/"
      ],
      "optimizer": {
        "enabled": true,
        "runs": 200
      },
      "metadata": {
        "bytecodeHash": "ipfs"
      },
      "compilationTarget": {
        "src/Messenger.sol": "IERC5564Messenger"
      },
      "libraries": {}
    },
    "sources": {
      "src/Messenger.sol": {
        "keccak256": "0xca7257e9c7084e9384015c995cc110c693599856df9f067f3a0d2c3a7ba49058",
        "urls": [
          "bzz-raw://18dbaabafbd4dd298207e5c803fb1bdd3a4ed0e89dcbb4ca92eed9f571a3c4b1",
          "dweb:/ipfs/QmSBiDN7jfcaVcA6YiELBsodkN31P9YWBn35eQnc2QBjha"
        ],
        "license": "UNLICENSED"
      }
    },
    "version": 1
  },
  "ast": {
    "absolutePath": "src/Messenger.sol",
    "id": 29514,
    "exportedSymbols": {
      "IERC5564Messenger": [
        29513
      ]
    },
    "nodeType": "SourceUnit",
    "src": "39:3317:20",
    "nodes": [
      {
        "id": 29362,
        "nodeType": "PragmaDirective",
        "src": "39:23:20",
        "nodes": [],
        "literals": [
          "solidity",
          "0.8",
          ".18"
        ]
      },
      {
        "id": 29513,
        "nodeType": "ContractDefinition",
        "src": "64:3291:20",
        "nodes": [
          {
            "id": 29369,
            "nodeType": "EventDefinition",
            "src": "133:65:20",
            "nodes": [],
            "anonymous": false,
            "documentation": {
              "id": 29363,
              "nodeType": "StructuredDocumentation",
              "src": "95:35:20",
              "text": "Emitted when stake is deposited"
            },
            "eventSelector": "1da2c4060997c108162f55c30ad2268924b069210f8c686ba302e1acc6909ccc",
            "name": "StakeDeposit",
            "nameLocation": "139:12:20",
            "parameters": {
              "id": 29368,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 29365,
                  "indexed": true,
                  "mutability": "mutable",
                  "name": "account",
                  "nameLocation": "168:7:20",
                  "nodeType": "VariableDeclaration",
                  "scope": 29369,
                  "src": "152:23:20",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 29364,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "152:7:20",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 29367,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "totalStaked",
                  "nameLocation": "185:11:20",
                  "nodeType": "VariableDeclaration",
                  "scope": 29369,
                  "src": "177:19:20",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 29366,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "177:7:20",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "151:46:20"
            }
          },
          {
            "id": 29377,
            "nodeType": "EventDefinition",
            "src": "202:88:20",
            "nodes": [],
            "anonymous": false,
            "eventSelector": "bf1dba36cbf97f27e9890b9ca95f31d9a0547294828d0f9b25299c090508c7ef",
            "name": "StakeWithdrawal",
            "nameLocation": "208:15:20",
            "parameters": {
              "id": 29376,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 29371,
                  "indexed": true,
                  "mutability": "mutable",
                  "name": "account",
                  "nameLocation": "240:7:20",
                  "nodeType": "VariableDeclaration",
                  "scope": 29377,
                  "src": "224:23:20",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 29370,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "224:7:20",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 29373,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "withdrawAddress",
                  "nameLocation": "257:15:20",
                  "nodeType": "VariableDeclaration",
                  "scope": 29377,
                  "src": "249:23:20",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 29372,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "249:7:20",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 29375,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "amount",
                  "nameLocation": "282:6:20",
                  "nodeType": "VariableDeclaration",
                  "scope": 29377,
                  "src": "274:14:20",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 29374,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "274:7:20",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "223:66:20"
            }
          },
          {
            "id": 29382,
            "nodeType": "VariableDeclaration",
            "src": "331:41:20",
            "nodes": [],
            "constant": false,
            "documentation": {
              "id": 29378,
              "nodeType": "StructuredDocumentation",
              "src": "294:34:20",
              "text": "maps paymaster to their stakes"
            },
            "functionSelector": "16934fc4",
            "mutability": "mutable",
            "name": "stakes",
            "nameLocation": "366:6:20",
            "scope": 29513,
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
              "typeString": "mapping(address => uint256)"
            },
            "typeName": {
              "id": 29381,
              "keyName": "",
              "keyNameLocation": "-1:-1:-1",
              "keyType": {
                "id": 29379,
                "name": "address",
                "nodeType": "ElementaryTypeName",
                "src": "339:7:20",
                "typeDescriptions": {
                  "typeIdentifier": "t_address",
                  "typeString": "address"
                }
              },
              "nodeType": "Mapping",
              "src": "331:27:20",
              "typeDescriptions": {
                "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                "typeString": "mapping(address => uint256)"
              },
              "valueName": "",
              "valueNameLocation": "-1:-1:-1",
              "valueType": {
                "id": 29380,
                "name": "uint256",
                "nodeType": "ElementaryTypeName",
                "src": "350:7:20",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint256",
                  "typeString": "uint256"
                }
              }
            },
            "visibility": "public"
          },
          {
            "id": 29395,
            "nodeType": "FunctionDefinition",
            "src": "415:99:20",
            "nodes": [],
            "body": {
              "id": 29394,
              "nodeType": "Block",
              "src": "481:33:20",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "baseExpression": {
                      "id": 29390,
                      "name": "stakes",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 29382,
                      "src": "494:6:20",
                      "typeDescriptions": {
                        "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                        "typeString": "mapping(address => uint256)"
                      }
                    },
                    "id": 29392,
                    "indexExpression": {
                      "id": 29391,
                      "name": "account",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 29385,
                      "src": "501:7:20",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "isConstant": false,
                    "isLValue": true,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "IndexAccess",
                    "src": "494:15:20",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "functionReturnParameters": 29389,
                  "id": 29393,
                  "nodeType": "Return",
                  "src": "487:22:20"
                }
              ]
            },
            "documentation": {
              "id": 29383,
              "nodeType": "StructuredDocumentation",
              "src": "377:35:20",
              "text": "return the stake of the account"
            },
            "functionSelector": "70a08231",
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "balanceOf",
            "nameLocation": "424:9:20",
            "parameters": {
              "id": 29386,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 29385,
                  "mutability": "mutable",
                  "name": "account",
                  "nameLocation": "442:7:20",
                  "nodeType": "VariableDeclaration",
                  "scope": 29395,
                  "src": "434:15:20",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 29384,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "434:7:20",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "433:17:20"
            },
            "returnParameters": {
              "id": 29389,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 29388,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 29395,
                  "src": "472:7:20",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 29387,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "472:7:20",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "471:9:20"
            },
            "scope": 29513,
            "stateMutability": "view",
            "virtual": false,
            "visibility": "public"
          },
          {
            "id": 29404,
            "nodeType": "FunctionDefinition",
            "src": "518:58:20",
            "nodes": [],
            "body": {
              "id": 29403,
              "nodeType": "Block",
              "src": "545:31:20",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "expression": {
                          "id": 29399,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": -15,
                          "src": "560:3:20",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 29400,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberLocation": "564:6:20",
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "src": "560:10:20",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "id": 29398,
                      "name": "addStake",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 29432,
                      "src": "551:8:20",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$",
                        "typeString": "function (address)"
                      }
                    },
                    "id": 29401,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "551:20:20",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 29402,
                  "nodeType": "ExpressionStatement",
                  "src": "551:20:20"
                }
              ]
            },
            "implemented": true,
            "kind": "receive",
            "modifiers": [],
            "name": "",
            "nameLocation": "-1:-1:-1",
            "parameters": {
              "id": 29396,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "525:2:20"
            },
            "returnParameters": {
              "id": 29397,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "545:0:20"
            },
            "scope": 29513,
            "stateMutability": "payable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "id": 29432,
            "nodeType": "FunctionDefinition",
            "src": "679:175:20",
            "nodes": [],
            "body": {
              "id": 29431,
              "nodeType": "Block",
              "src": "728:126:20",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 29414,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "expression": {
                            "id": 29411,
                            "name": "msg",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -15,
                            "src": "742:3:20",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_message",
                              "typeString": "msg"
                            }
                          },
                          "id": 29412,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberLocation": "746:5:20",
                          "memberName": "value",
                          "nodeType": "MemberAccess",
                          "src": "742:9:20",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": ">",
                        "rightExpression": {
                          "hexValue": "30",
                          "id": 29413,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "754:1:20",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          },
                          "value": "0"
                        },
                        "src": "742:13:20",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "696e76616c696420616d6f756e74",
                        "id": 29415,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "757:16:20",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_428d2b45bb1c86227a8688f1c30f1c359824c9298dfce034ebf8ca193afdf5e7",
                          "typeString": "literal_string \"invalid amount\""
                        },
                        "value": "invalid amount"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_428d2b45bb1c86227a8688f1c30f1c359824c9298dfce034ebf8ca193afdf5e7",
                          "typeString": "literal_string \"invalid amount\""
                        }
                      ],
                      "id": 29410,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "734:7:20",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 29416,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "734:40:20",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 29417,
                  "nodeType": "ExpressionStatement",
                  "src": "734:40:20"
                },
                {
                  "expression": {
                    "id": 29423,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "baseExpression": {
                        "id": 29418,
                        "name": "stakes",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 29382,
                        "src": "780:6:20",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                          "typeString": "mapping(address => uint256)"
                        }
                      },
                      "id": 29420,
                      "indexExpression": {
                        "id": 29419,
                        "name": "staker",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 29407,
                        "src": "787:6:20",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "780:14:20",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "+=",
                    "rightHandSide": {
                      "expression": {
                        "id": 29421,
                        "name": "msg",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": -15,
                        "src": "798:3:20",
                        "typeDescriptions": {
                          "typeIdentifier": "t_magic_message",
                          "typeString": "msg"
                        }
                      },
                      "id": 29422,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "802:5:20",
                      "memberName": "value",
                      "nodeType": "MemberAccess",
                      "src": "798:9:20",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "780:27:20",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 29424,
                  "nodeType": "ExpressionStatement",
                  "src": "780:27:20"
                },
                {
                  "eventCall": {
                    "arguments": [
                      {
                        "id": 29426,
                        "name": "staker",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 29407,
                        "src": "831:6:20",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "expression": {
                          "id": 29427,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": -15,
                          "src": "839:3:20",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 29428,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberLocation": "843:5:20",
                        "memberName": "value",
                        "nodeType": "MemberAccess",
                        "src": "839:9:20",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 29425,
                      "name": "StakeDeposit",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 29369,
                      "src": "818:12:20",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (address,uint256)"
                      }
                    },
                    "id": 29429,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "818:31:20",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 29430,
                  "nodeType": "EmitStatement",
                  "src": "813:36:20"
                }
              ]
            },
            "documentation": {
              "id": 29405,
              "nodeType": "StructuredDocumentation",
              "src": "580:96:20",
              "text": " add to the account's stake - amount\n @param staker the address of the staker."
            },
            "functionSelector": "10767904",
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "addStake",
            "nameLocation": "688:8:20",
            "parameters": {
              "id": 29408,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 29407,
                  "mutability": "mutable",
                  "name": "staker",
                  "nameLocation": "705:6:20",
                  "nodeType": "VariableDeclaration",
                  "scope": 29432,
                  "src": "697:14:20",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 29406,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "697:7:20",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "696:16:20"
            },
            "returnParameters": {
              "id": 29409,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "728:0:20"
            },
            "scope": 29513,
            "stateMutability": "payable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "id": 29481,
            "nodeType": "FunctionDefinition",
            "src": "960:361:20",
            "nodes": [],
            "body": {
              "id": 29480,
              "nodeType": "Block",
              "src": "1025:296:20",
              "nodes": [],
              "statements": [
                {
                  "assignments": [
                    29439
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 29439,
                      "mutability": "mutable",
                      "name": "stake",
                      "nameLocation": "1039:5:20",
                      "nodeType": "VariableDeclaration",
                      "scope": 29480,
                      "src": "1031:13:20",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 29438,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "1031:7:20",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 29444,
                  "initialValue": {
                    "baseExpression": {
                      "id": 29440,
                      "name": "stakes",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 29382,
                      "src": "1047:6:20",
                      "typeDescriptions": {
                        "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                        "typeString": "mapping(address => uint256)"
                      }
                    },
                    "id": 29443,
                    "indexExpression": {
                      "expression": {
                        "id": 29441,
                        "name": "msg",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": -15,
                        "src": "1054:3:20",
                        "typeDescriptions": {
                          "typeIdentifier": "t_magic_message",
                          "typeString": "msg"
                        }
                      },
                      "id": 29442,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "1058:6:20",
                      "memberName": "sender",
                      "nodeType": "MemberAccess",
                      "src": "1054:10:20",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "isConstant": false,
                    "isLValue": true,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "IndexAccess",
                    "src": "1047:18:20",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "1031:34:20"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 29448,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "id": 29446,
                          "name": "stake",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 29439,
                          "src": "1079:5:20",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": ">",
                        "rightExpression": {
                          "hexValue": "30",
                          "id": 29447,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "1087:1:20",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          },
                          "value": "0"
                        },
                        "src": "1079:9:20",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "4e6f207374616b6520746f207769746864726177",
                        "id": 29449,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "1090:22:20",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_2157ff27c581d0c09d0fefae4820572f0bccc198ee5e28633f039d06e0011705",
                          "typeString": "literal_string \"No stake to withdraw\""
                        },
                        "value": "No stake to withdraw"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_2157ff27c581d0c09d0fefae4820572f0bccc198ee5e28633f039d06e0011705",
                          "typeString": "literal_string \"No stake to withdraw\""
                        }
                      ],
                      "id": 29445,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "1071:7:20",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 29450,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1071:42:20",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 29451,
                  "nodeType": "ExpressionStatement",
                  "src": "1071:42:20"
                },
                {
                  "expression": {
                    "id": 29457,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "baseExpression": {
                        "id": 29452,
                        "name": "stakes",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 29382,
                        "src": "1119:6:20",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                          "typeString": "mapping(address => uint256)"
                        }
                      },
                      "id": 29455,
                      "indexExpression": {
                        "expression": {
                          "id": 29453,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": -15,
                          "src": "1126:3:20",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 29454,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberLocation": "1130:6:20",
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "src": "1126:10:20",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "1119:18:20",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "hexValue": "30",
                      "id": 29456,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "1140:1:20",
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_0_by_1",
                        "typeString": "int_const 0"
                      },
                      "value": "0"
                    },
                    "src": "1119:22:20",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 29458,
                  "nodeType": "ExpressionStatement",
                  "src": "1119:22:20"
                },
                {
                  "eventCall": {
                    "arguments": [
                      {
                        "expression": {
                          "id": 29460,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": -15,
                          "src": "1168:3:20",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 29461,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberLocation": "1172:6:20",
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "src": "1168:10:20",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 29462,
                        "name": "withdrawAddress",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 29435,
                        "src": "1180:15:20",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      },
                      {
                        "id": 29463,
                        "name": "stake",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 29439,
                        "src": "1197:5:20",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 29459,
                      "name": "StakeWithdrawal",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 29377,
                      "src": "1152:15:20",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (address,address,uint256)"
                      }
                    },
                    "id": 29464,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1152:51:20",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 29465,
                  "nodeType": "EmitStatement",
                  "src": "1147:56:20"
                },
                {
                  "assignments": [
                    29467,
                    null
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 29467,
                      "mutability": "mutable",
                      "name": "success",
                      "nameLocation": "1215:7:20",
                      "nodeType": "VariableDeclaration",
                      "scope": 29480,
                      "src": "1210:12:20",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      },
                      "typeName": {
                        "id": 29466,
                        "name": "bool",
                        "nodeType": "ElementaryTypeName",
                        "src": "1210:4:20",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      "visibility": "internal"
                    },
                    null
                  ],
                  "id": 29474,
                  "initialValue": {
                    "arguments": [
                      {
                        "hexValue": "",
                        "id": 29472,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "1263:2:20",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
                          "typeString": "literal_string \"\""
                        },
                        "value": ""
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
                          "typeString": "literal_string \"\""
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
                            "typeString": "literal_string \"\""
                          }
                        ],
                        "expression": {
                          "id": 29468,
                          "name": "withdrawAddress",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 29435,
                          "src": "1228:15:20",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address_payable",
                            "typeString": "address payable"
                          }
                        },
                        "id": 29469,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberLocation": "1244:4:20",
                        "memberName": "call",
                        "nodeType": "MemberAccess",
                        "src": "1228:20:20",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$",
                          "typeString": "function (bytes memory) payable returns (bool,bytes memory)"
                        }
                      },
                      "id": 29471,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "names": [
                        "value"
                      ],
                      "nodeType": "FunctionCallOptions",
                      "options": [
                        {
                          "id": 29470,
                          "name": "stake",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 29439,
                          "src": "1256:5:20",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        }
                      ],
                      "src": "1228:34:20",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$value",
                        "typeString": "function (bytes memory) payable returns (bool,bytes memory)"
                      }
                    },
                    "id": 29473,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1228:38:20",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$_t_bool_$_t_bytes_memory_ptr_$",
                      "typeString": "tuple(bool,bytes memory)"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "1209:57:20"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 29476,
                        "name": "success",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 29467,
                        "src": "1280:7:20",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "6661696c656420746f207769746864726177207374616b65",
                        "id": 29477,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "1289:26:20",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_1dfdcaaacbfb01ed2a280d66b545f88db6fa18ccf502cb079b76e190a3a0227b",
                          "typeString": "literal_string \"failed to withdraw stake\""
                        },
                        "value": "failed to withdraw stake"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_1dfdcaaacbfb01ed2a280d66b545f88db6fa18ccf502cb079b76e190a3a0227b",
                          "typeString": "literal_string \"failed to withdraw stake\""
                        }
                      ],
                      "id": 29475,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "1272:7:20",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 29478,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1272:44:20",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 29479,
                  "nodeType": "ExpressionStatement",
                  "src": "1272:44:20"
                }
              ]
            },
            "documentation": {
              "id": 29433,
              "nodeType": "StructuredDocumentation",
              "src": "858:99:20",
              "text": " withdraw the stake.\n @param withdrawAddress the address to send withdrawn value."
            },
            "functionSelector": "c23a5cea",
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "withdrawStake",
            "nameLocation": "969:13:20",
            "parameters": {
              "id": 29436,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 29435,
                  "mutability": "mutable",
                  "name": "withdrawAddress",
                  "nameLocation": "999:15:20",
                  "nodeType": "VariableDeclaration",
                  "scope": 29481,
                  "src": "983:31:20",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address_payable",
                    "typeString": "address payable"
                  },
                  "typeName": {
                    "id": 29434,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "983:15:20",
                    "stateMutability": "payable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address_payable",
                      "typeString": "address payable"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "982:33:20"
            },
            "returnParameters": {
              "id": 29437,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1025:0:20"
            },
            "scope": 29513,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "id": 29492,
            "nodeType": "EventDefinition",
            "src": "1463:116:20",
            "nodes": [],
            "anonymous": false,
            "documentation": {
              "id": 29482,
              "nodeType": "StructuredDocumentation",
              "src": "1325:135:20",
              "text": "@dev Emitted when sending something to a stealth address.\n @dev See the `announce` method for documentation on the parameters."
            },
            "eventSelector": "c161b5d8d13c524d769545162d90b3e4341d89659fa54b3126825f4cabc26582",
            "name": "Announcement",
            "nameLocation": "1469:12:20",
            "parameters": {
              "id": 29491,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 29484,
                  "indexed": true,
                  "mutability": "mutable",
                  "name": "schemeId",
                  "nameLocation": "1498:8:20",
                  "nodeType": "VariableDeclaration",
                  "scope": 29492,
                  "src": "1482:24:20",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 29483,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "1482:7:20",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 29486,
                  "indexed": true,
                  "mutability": "mutable",
                  "name": "stealthAddress",
                  "nameLocation": "1524:14:20",
                  "nodeType": "VariableDeclaration",
                  "scope": 29492,
                  "src": "1508:30:20",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 29485,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1508:7:20",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 29488,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "ephemeralPubKey",
                  "nameLocation": "1546:15:20",
                  "nodeType": "VariableDeclaration",
                  "scope": 29492,
                  "src": "1540:21:20",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes_memory_ptr",
                    "typeString": "bytes"
                  },
                  "typeName": {
                    "id": 29487,
                    "name": "bytes",
                    "nodeType": "ElementaryTypeName",
                    "src": "1540:5:20",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes_storage_ptr",
                      "typeString": "bytes"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 29490,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "metadata",
                  "nameLocation": "1569:8:20",
                  "nodeType": "VariableDeclaration",
                  "scope": 29492,
                  "src": "1563:14:20",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes_memory_ptr",
                    "typeString": "bytes"
                  },
                  "typeName": {
                    "id": 29489,
                    "name": "bytes",
                    "nodeType": "ElementaryTypeName",
                    "src": "1563:5:20",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes_storage_ptr",
                      "typeString": "bytes"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1481:97:20"
            }
          },
          {
            "id": 29512,
            "nodeType": "FunctionDefinition",
            "src": "3150:203:20",
            "nodes": [],
            "body": {
              "id": 29511,
              "nodeType": "Block",
              "src": "3272:81:20",
              "nodes": [],
              "statements": [
                {
                  "eventCall": {
                    "arguments": [
                      {
                        "id": 29505,
                        "name": "schemeId",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 29495,
                        "src": "3296:8:20",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "id": 29506,
                        "name": "stealthAddress",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 29497,
                        "src": "3306:14:20",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 29507,
                        "name": "ephemeralPubKey",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 29499,
                        "src": "3322:15:20",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      },
                      {
                        "id": 29508,
                        "name": "metadata",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 29501,
                        "src": "3339:8:20",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        },
                        {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      ],
                      "id": 29504,
                      "name": "Announcement",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 29492,
                      "src": "3283:12:20",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_uint256_$_t_address_$_t_bytes_memory_ptr_$_t_bytes_memory_ptr_$returns$__$",
                        "typeString": "function (uint256,address,bytes memory,bytes memory)"
                      }
                    },
                    "id": 29509,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3283:65:20",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 29510,
                  "nodeType": "EmitStatement",
                  "src": "3278:70:20"
                }
              ]
            },
            "documentation": {
              "id": 29493,
              "nodeType": "StructuredDocumentation",
              "src": "1583:1564:20",
              "text": "@dev Called by integrators to emit an `Announcement` event.\n @param schemeId The applied stealth address scheme (f.e. secp25k1).\n @param stealthAddress The computed stealth address for the recipient.\n @param ephemeralPubKey Ephemeral public key used by the sender.\n @param metadata An arbitrary field MUST include the view tag in the first byte.\n Besides the view tag, the metadata can be used by the senders however they like,\n but the below guidelines are recommended:\n The first byte of the metadata MUST be the view tag.\n - When sending ERC-20 tokens, the metadata SHOULD be structured as follows:\n   - Byte 1 MUST be the view tag, as specified above.\n   - Bytes 2-5 are the method Id, which the hash of the canonical representation of the function to call.\n   - Bytes 6-25 are the token contract address.\n   - Bytes 26-57 are the amount of tokens being sent.\n - When approving a stealth address to spend ERC-20 tokens, the metadata SHOULD be structured as follows:\n   - Byte 1 MUST be the view tag, as specified above.\n   - Bytes 2-5 are 0xe1f21c67, which the signature for the ERC-20 approve method.\n   - Bytes 6-25 are the token address.\n   - Bytes 26-57 are the approval amount.\n - When sending ERC-721 tokens, the metadata SHOULD be structured as follows:\n   - Byte 1 MUST be the view tag, as specified above.\n   - Bytes 2-5 are the method Id.\n   - Bytes 6-25 are the token address.\n   - Bytes 26-57 are the token ID of the token being sent."
            },
            "functionSelector": "4d1f9583",
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "announce",
            "nameLocation": "3159:8:20",
            "parameters": {
              "id": 29502,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 29495,
                  "mutability": "mutable",
                  "name": "schemeId",
                  "nameLocation": "3176:8:20",
                  "nodeType": "VariableDeclaration",
                  "scope": 29512,
                  "src": "3168:16:20",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 29494,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "3168:7:20",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 29497,
                  "mutability": "mutable",
                  "name": "stealthAddress",
                  "nameLocation": "3194:14:20",
                  "nodeType": "VariableDeclaration",
                  "scope": 29512,
                  "src": "3186:22:20",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 29496,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "3186:7:20",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 29499,
                  "mutability": "mutable",
                  "name": "ephemeralPubKey",
                  "nameLocation": "3223:15:20",
                  "nodeType": "VariableDeclaration",
                  "scope": 29512,
                  "src": "3210:28:20",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes_memory_ptr",
                    "typeString": "bytes"
                  },
                  "typeName": {
                    "id": 29498,
                    "name": "bytes",
                    "nodeType": "ElementaryTypeName",
                    "src": "3210:5:20",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes_storage_ptr",
                      "typeString": "bytes"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 29501,
                  "mutability": "mutable",
                  "name": "metadata",
                  "nameLocation": "3253:8:20",
                  "nodeType": "VariableDeclaration",
                  "scope": 29512,
                  "src": "3240:21:20",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes_memory_ptr",
                    "typeString": "bytes"
                  },
                  "typeName": {
                    "id": 29500,
                    "name": "bytes",
                    "nodeType": "ElementaryTypeName",
                    "src": "3240:5:20",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes_storage_ptr",
                      "typeString": "bytes"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "3167:95:20"
            },
            "returnParameters": {
              "id": 29503,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "3272:0:20"
            },
            "scope": 29513,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          }
        ],
        "abstract": false,
        "baseContracts": [],
        "canonicalName": "IERC5564Messenger",
        "contractDependencies": [],
        "contractKind": "contract",
        "fullyImplemented": true,
        "linearizedBaseContracts": [
          29513
        ],
        "name": "IERC5564Messenger",
        "nameLocation": "73:17:20",
        "scope": 29514,
        "usedErrors": []
      }
    ],
    "license": "UNLICENSED"
  },
  "id": 20
}